// Vitest Snapshot v1

exports[`github-action > dist 1`] = `
[
  "main.js",
]
`;

exports[`github-action > dist/main.js 1`] = `
"use strict";
var __defProp = Object.defineProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });

// ../../node_modules/strip-ansi/node_modules/ansi-regex/index.js
function ansiRegex({ onlyFirst = false } = {}) {
  const pattern = [
    "[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)",
    "(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))"
  ].join("|");
  return new RegExp(pattern, onlyFirst ? void 0 : "g");
}
__name(ansiRegex, "ansiRegex");

// ../../node_modules/strip-ansi/index.js
function stripAnsi(string) {
  if (typeof string !== "string") {
    throw new TypeError(\`Expected a \\\`string\\\`, got \\\`\${typeof string}\\\`\`);
  }
  return string.replace(ansiRegex(), "");
}
__name(stripAnsi, "stripAnsi");

// src/hello.ts
function hello(name) {
  return \`Hello, \${stripAnsi(name)}\`;
}
__name(hello, "hello");

// src/main.ts
function main() {
  const name = process.env.INPUT_NAME || "unknown";
  if (name !== process.env.INPUT_NAME && false) {
    console.warn(
      \`INPUT_NAME was not provided, so we replaced it with: \${name}\`
    );
  }
  console.log(hello(name));
}
__name(main, "main");
main();

`;

exports[`github-action > logs 1`] = `
[STARTED] Resolving build manifests
[DATA] Checking 'action.yml'
[DATA] Checking 'package.json'
[SUCCESS] Resolving build manifests
[STARTED] Run preparations
[DATA] Removing 'dist' directory
[SUCCESS] Run preparations
[STARTED] Making bundle from 'action.yml'
[DATA] Using '.runs.main' entry: ./src/main.ts
[DATA] Using '.runs.using' entry: node16
[SUCCESS] Making bundle from 'action.yml'
`;

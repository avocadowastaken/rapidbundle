// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`types-cjs: dist 1`] = `
Array [
  "index.d.ts",
  "index.js",
]
`;

exports[`types-cjs: dist/index.d.ts 1`] = `
declare var hello: (name: string) => string;

export { hello };

`;

exports[`types-cjs: dist/index.js 1`] = `
"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};

// src/hello.js
var require_hello = __commonJS({
  "src/hello.js"(exports2, module2) {
    module2.exports = /* @__PURE__ */ __name(function hello(name) {
      return \`Hello, \${name}\`;
    }, "hello");
  }
});

// src/index.js
module.exports.hello = require_hello();

`;

exports[`types-cjs: logs 1`] = `
[STARTED] Resolving build manifests
[DATA] Checking 'action.yml'
[DATA] Checking 'package.json'
[SUCCESS] Resolving build manifests
[STARTED] Run preparations
[DATA] Removing 'dist' directory
[SUCCESS] Run preparations
[STARTED] Making bundle from 'package.json'
[STARTED] Parsing 'package.json'
[SUCCESS] Parsing 'package.json'
[STARTED] Making '.main' entry bundle
[DATA] Setting entry point: ./src/index
[DATA] Setting output file: ./dist/index.js
[SUCCESS] Making '.main' entry bundle
[STARTED] Making '.types' entry bundle
[DATA] Generating 'd.ts' files
[DATA] Bundle into single 'd.ts' file
[SUCCESS] Making '.types' entry bundle
[SUCCESS] Making bundle from 'package.json'
`;

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`errors invalid-action 1`] = `
[HH:mm:ss] Getting entry point [started]
[HH:mm:ss] → Resolving from: <cwd>/test/__fixtures__/errors/invalid-action/src
[HH:mm:ss] → Resolving from: <cwd>/test/__fixtures__/errors/invalid-action/lib
[HH:mm:ss] → Resolving from: <cwd>/test/__fixtures__/errors/invalid-action
[HH:mm:ss] → Resolved: <cwd>/test/__fixtures__/errors/invalid-action/index.ts
[HH:mm:ss] Getting entry point [completed]
[HH:mm:ss] Getting GitHub Action manifest [started]
[HH:mm:ss] Getting GitHub Action manifest [failed]
[HH:mm:ss] → Invalid 'action.yml':
  .runs.main: Expected a string (got undefined)
  .runs.using: Expected a valid enumeration value (got an empty string)
`;

exports[`errors invalid-entry 1`] = `
[HH:mm:ss] Getting entry point [started]
[HH:mm:ss] → Resolving from: <cwd>/test/__fixtures__/errors/invalid-entry/src
[HH:mm:ss] → Resolving from: <cwd>/test/__fixtures__/errors/invalid-entry/lib
[HH:mm:ss] → Resolving from: <cwd>/test/__fixtures__/errors/invalid-entry
[HH:mm:ss] Getting entry point [failed]
[HH:mm:ss] → Failed to resolve entry from: <cwd>/test/__fixtures__/errors/invalid-entry.
`;

exports[`examples browser-esm-basic: dist files 1`] = `
Array [
  "index.js",
]
`;

exports[`examples browser-esm-basic: index.js 1`] = `
// ../../node_modules/lodash-es/isObjectLike.js
function isObjectLike(value) {
  return value != null && typeof value == "object";
}
var isObjectLike_default = isObjectLike;

// src/index.ts
var isImportMetaObjectLike = isObjectLike_default(import.meta);
export {
  isImportMetaObjectLike
};
/**
 * @license
 * Lodash (Custom Build) <https://lodash.com/>
 * Build: \`lodash modularize exports="es" -o ./\`
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

`;

exports[`examples browser-esm-basic: logs 1`] = `
[HH:mm:ss] Getting entry point [started]
[HH:mm:ss] → Resolving from: <cwd>/examples/browser-esm-basic/src
[HH:mm:ss] → Resolved: <cwd>/examples/browser-esm-basic/src/index.ts
[HH:mm:ss] Getting entry point [completed]
[HH:mm:ss] Getting GitHub Action manifest [started]
[HH:mm:ss] Getting GitHub Action manifest [completed]
[HH:mm:ss] Getting Node package manifest [started]
[HH:mm:ss] Getting Node package manifest [completed]
[HH:mm:ss] Creating Node CJS bundle [started]
[HH:mm:ss] Creating Node CJS bundle [skipped]
[HH:mm:ss] → "main" field is empty.
[HH:mm:ss] Creating Browser ESM bundle [started]
[HH:mm:ss] Creating Browser ESM bundle [completed]
`;

exports[`examples github-action: dist files 1`] = `
Array [
  "main.js",
]
`;

exports[`examples github-action: logs 1`] = `
[HH:mm:ss] Getting entry point [started]
[HH:mm:ss] → Resolving from: <cwd>/examples/github-action/src
[HH:mm:ss] → Resolved: <cwd>/examples/github-action/src/index.ts
[HH:mm:ss] Getting entry point [completed]
[HH:mm:ss] Getting GitHub Action manifest [started]
[HH:mm:ss] Getting GitHub Action manifest [completed]
[HH:mm:ss] Creating bundle from GitHub Action manifest [started]
[HH:mm:ss] Creating bundle from GitHub Action manifest [completed]
`;

exports[`examples github-action: main.js 1`] = `
var __defProp = Object.defineProperty;
var __name = (target, value) => __defProp(target, "name", {value, configurable: true});

// ../../node_modules/lodash-es/isObjectLike.js
function isObjectLike(value) {
  return value != null && typeof value == "object";
}
__name(isObjectLike, "isObjectLike");
var isObjectLike_default = isObjectLike;

// src/index.ts
if (isObjectLike_default(process))
  console.log(process.env);
/**
 * @license
 * Lodash (Custom Build) <https://lodash.com/>
 * Build: \`lodash modularize exports="es" -o ./\`
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

`;

exports[`examples node-basic: dist files 1`] = `
Array [
  "index.js",
]
`;

exports[`examples node-basic: index.js 1`] = `
var __defProp = Object.defineProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", {value: true});
var __name = (target, value) => __defProp(target, "name", {value, configurable: true});
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, {get: all[name], enumerable: true});
};

// src/index.ts
__markAsModule(exports);
__export(exports, {
  isAdmin: () => isAdmin
});

// ../../node_modules/lodash-es/isObjectLike.js
function isObjectLike(value) {
  return value != null && typeof value == "object";
}
__name(isObjectLike, "isObjectLike");
var isObjectLike_default = isObjectLike;

// src/index.ts
var assert = require("assert");
function isAdmin(user) {
  assert.ok(isObjectLike_default(user));
  return user.role === "admin";
}
__name(isAdmin, "isAdmin");
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  isAdmin
});
/**
 * @license
 * Lodash (Custom Build) <https://lodash.com/>
 * Build: \`lodash modularize exports="es" -o ./\`
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

`;

exports[`examples node-basic: logs 1`] = `
[HH:mm:ss] Getting entry point [started]
[HH:mm:ss] → Resolving from: <cwd>/examples/node-basic/src
[HH:mm:ss] → Resolved: <cwd>/examples/node-basic/src/index.ts
[HH:mm:ss] Getting entry point [completed]
[HH:mm:ss] Getting GitHub Action manifest [started]
[HH:mm:ss] Getting GitHub Action manifest [completed]
[HH:mm:ss] Getting Node package manifest [started]
[HH:mm:ss] Getting Node package manifest [completed]
[HH:mm:ss] Creating Node CJS bundle [started]
[HH:mm:ss] Creating Node CJS bundle [completed]
[HH:mm:ss] Creating Browser ESM bundle [started]
[HH:mm:ss] Creating Browser ESM bundle [skipped]
[HH:mm:ss] → "module" field is empty.
`;

exports[`examples node-dependencies: dist files 1`] = `
Array [
  "index.js",
]
`;

exports[`examples node-dependencies: index.js 1`] = `
var __defProp = Object.defineProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", {value: true});
var __name = (target, value) => __defProp(target, "name", {value, configurable: true});
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, {get: all[name], enumerable: true});
};

// src/index.ts
__markAsModule(exports);
__export(exports, {
  logger: () => logger
});

// ../../node_modules/lodash-es/isObjectLike.js
function isObjectLike(value) {
  return value != null && typeof value == "object";
}
__name(isObjectLike, "isObjectLike");
var isObjectLike_default = isObjectLike;

// src/index.ts
var debug = require("debug");
var logger = debug("app");
if (isObjectLike_default(console))
  logger.log = console.log;
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  logger
});
/**
 * @license
 * Lodash (Custom Build) <https://lodash.com/>
 * Build: \`lodash modularize exports="es" -o ./\`
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

`;

exports[`examples node-dependencies: logs 1`] = `
[HH:mm:ss] Getting entry point [started]
[HH:mm:ss] → Resolving from: <cwd>/examples/node-dependencies/src
[HH:mm:ss] → Resolved: <cwd>/examples/node-dependencies/src/index.ts
[HH:mm:ss] Getting entry point [completed]
[HH:mm:ss] Getting GitHub Action manifest [started]
[HH:mm:ss] Getting GitHub Action manifest [completed]
[HH:mm:ss] Getting Node package manifest [started]
[HH:mm:ss] Getting Node package manifest [completed]
[HH:mm:ss] Creating Node CJS bundle [started]
[HH:mm:ss] Creating Node CJS bundle [completed]
[HH:mm:ss] Creating Browser ESM bundle [started]
[HH:mm:ss] Creating Browser ESM bundle [skipped]
[HH:mm:ss] → "module" field is empty.
`;

exports[`examples node-version: dist files 1`] = `
Array [
  "index.js",
]
`;

exports[`examples node-version: index.js 1`] = `
var __defProp = Object.defineProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", {value: true});
var __name = (target, value) => __defProp(target, "name", {value, configurable: true});
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, {get: all[name], enumerable: true});
};

// src/index.ts
__markAsModule(exports);
__export(exports, {
  Foo: () => Foo
});
var Foo = class {
  #bar;
  constructor(bar) {
    this.#bar = bar;
  }
};
__name(Foo, "Foo");
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Foo
});

`;

exports[`examples node-version: logs 1`] = `
[HH:mm:ss] Getting entry point [started]
[HH:mm:ss] → Resolving from: <cwd>/examples/node-version/src
[HH:mm:ss] → Resolved: <cwd>/examples/node-version/src/index.ts
[HH:mm:ss] Getting entry point [completed]
[HH:mm:ss] Getting GitHub Action manifest [started]
[HH:mm:ss] Getting GitHub Action manifest [completed]
[HH:mm:ss] Getting Node package manifest [started]
[HH:mm:ss] Getting Node package manifest [completed]
[HH:mm:ss] Creating Node CJS bundle [started]
[HH:mm:ss] Creating Node CJS bundle [completed]
[HH:mm:ss] Creating Browser ESM bundle [started]
[HH:mm:ss] Creating Browser ESM bundle [skipped]
[HH:mm:ss] → "module" field is empty.
`;
